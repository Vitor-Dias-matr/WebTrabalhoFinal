"use strict";!function(){function e(e){function t(e,t){var o=e;return o=o.toLowerCase(),o=o.trim(),t?(o=o.replace(/\s+/g,"+"),encodeURI(o)):(window.freedom.nsDiacritics.normalize(e),o=o.replace(/\s\s+/g," "))}function n(){window.clearTimeout(y.searchTimeoutId),y.searchTimeoutId=null;var t=S?S.querySelectorAll("[data-suggestion-list] a"):[];if(t&&t.length)for(var n=0;n<t.length;n++)t[n].removeEventListener("mouseover",w);o.pub("overlay.display","hide"),window.freedom.removeClass(e,"suggestion-active"),S.innerHTML="",y.selectedSuggestionLastPosition=-1}function s(e){n(),"string"==typeof e&&(S.innerHTML=e,v(),window.freedom.nsPubSub.pub("Searchfield.suggestion.loaded"),window.freedom.nsPubSub.pub("Searchfield.suggestion.loaded.float.mobile"))}function i(e){var t=S.querySelector("[data-suggestion-top-results-wrapper]");"string"==typeof e&&e&&t&&(t.innerHTML=e,window.freedom.nsPubSub.pub("Searchfield.suggestion.loaded"));var o=S.querySelector("."+L);o&&window.freedom.removeClass(o,L)}function r(e,t){t&&t.length>2&&window.freedom.restClient.request(e+"?q="+t,{complete:function(t){if(y.searchTimeoutId){if(e===C.suggestion)return void s(t);i(t)}}})}function a(e,o){return o=t(o,!0),o.toLowerCase()!==y.lastRequestedQuery.toLowerCase()&&(y.lastRequestedQuery=o,window.clearTimeout(y.searchTimeoutId),y.searchTimeoutId=window.setTimeout(function(){r(e,o)},400),!0)}function u(){var e=S.querySelector("."+T);e&&(window.freedom.removeClass(e,T),window.freedom.removeClass(e,L))}function d(e){window.freedom.addClass(e,T),e&&a(C.topResults,e.innerText)&&window.freedom.addClass(e,L)}function l(e){window.freedom.removeClass(e.currentTarget,T),b.value=y.lastTypedQuery,b.focus()}function c(e){var t,o=S?S.querySelectorAll("[data-suggestion-list] a"):[];if(o.length){switch(y.selectedSuggestionLastPosition===-1&&(y.lastTypedQuery=b.value),e.keyCode){case P.up:y.selectedSuggestionLastPosition>=0?y.selectedSuggestionLastPosition--:y.selectedSuggestionLastPosition=o.length-1;break;case P.down:y.selectedSuggestionLastPosition===o.length-1?y.selectedSuggestionLastPosition=-1:y.selectedSuggestionLastPosition++;break;default:return}if(e.preventDefault(),y.selectedSuggestionLastPosition===-1)return b.value=y.lastTypedQuery,l(e),void u();t=o[y.selectedSuggestionLastPosition],b&&t&&(b.value=t.innerText),u(),t&&d(t)}}function g(t){return t.value?window.freedom.addClass(e,"clear-active"):window.freedom.removeClass(e,"clear-active"),t.value.length<3?(n(),void window.freedom.nsPubSub.pub("SearchSuggestion.mobile.disable.Fixed")):void a(C.suggestion,t.value)}function f(e){var t=e.currentTarget;return e.keyCode===P.esc?(window.freedom.nsPubSub.pub("Searchfield.esc.pressed"),void n()):e.keyCode===P.up||e.keyCode===P.down?void c(e):void g(t)}function w(e){u(),e&&e.currentTarget&&a(C.topResults,e.currentTarget.innerText)&&window.freedom.addClass(e.target,L)}function m(e){setTimeout(function(){window.freedom.removeClass(e.target,L)},20)}function v(){for(var t=S?S.querySelectorAll("[data-suggestion-list] a"):[],n=0;n<t.length;n++)t[n].addEventListener("mouseover",w),t[n].addEventListener("mouseleave",m);o.pub("overlay.display","show"),window.freedom.addClass(e,"suggestion-active")}function p(e){b.value?(b.value.replace(/<[a-zA-Z\/][^>]*>|">|<"/g,""),b.value=t(b.value)):(window.freedom.preventDefault(e),window.location.pathname&&"/"!==window.location.pathname&&window.location.assign("/"))}var S=e.querySelector("[data-search-suggestion-wrapper]"),b=e.querySelector("[data-search-field]"),h=e.parentElement.querySelector("[data-search-field-form]");if(!S||!b||!h)throw new Error("Main structure is missing. Verify SearchField component.");var y={lastTypedQuery:"",searchTimeoutId:null,lastRequestedQuery:"",selectedSuggestionLastPosition:-1},T="selected",L="loading",P={up:38,down:40,esc:27},C={suggestion:"/refactoring/suggestion",topResults:"/refactoring/suggestion/top-results"};!function(){var t=e.getAttribute("data-suggestion"),o=!(t&&"ENABLED"!==t);h.addEventListener("submit",p),o&&(n(),window.freedom.nsPubSub.sub("overlay.clicked",n),window.freedom.nsPubSub.sub("searchField.clearSuggestion",n),window.freedom.nsPubSub.sub("float.searchField.clearSuggestion",n),window.freedom.nsPubSub.sub("searchField.valueUpdated",g),b.addEventListener("keyup",f))}()}function t(){var t=document.querySelectorAll("[data-search-field-wrapper]");if(t.length)for(var o=0;o<t.length;o++)e(t[o])}var o=window.freedom.nsPubSub||{};!function(){o.sub("nsDiacritics.loaded",t)}()}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9yZWZhY3RvcmluZy9fY29tcG9uZW50cy9zZWFyY2gtZmllbGQvYWxsL3NlYXJjaC1maWVsZC5taW4uanMiXSwibmFtZXMiOlsic2VhcmNoRmllbGRGYWN0b3J5IiwiY29tcG9uZW50Iiwibm9ybWFsaXplIiwidGV4dCIsImlzQWpheCIsInZhbHVlIiwidG9Mb3dlckNhc2UiLCJ0cmltIiwicmVwbGFjZSIsImVuY29kZVVSSSIsIndpbmRvdyIsImZyZWVkb20iLCJuc0RpYWNyaXRpY3MiLCJjbGVhclN1Z2dlc3Rpb25XcmFwcGVyRWxlbWVudHMiLCJjbGVhclRpbWVvdXQiLCJjYWNoZSIsInNlYXJjaFRpbWVvdXRJZCIsInN1Z2dlc3Rpb25zIiwiZG9tU3VnZ2VzdGlvbkVsZW1lbnRXcmFwcGVyIiwicXVlcnlTZWxlY3RvckFsbCIsImxlbmd0aCIsImkiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwib25Nb3VzZU92ZXJTdWdnZXN0aW9uIiwibnNQdWJTdWIiLCJwdWIiLCJyZW1vdmVDbGFzcyIsImlubmVySFRNTCIsInNlbGVjdGVkU3VnZ2VzdGlvbkxhc3RQb3NpdGlvbiIsInN1Z2dlc3Rpb25SZXF1ZXN0Q29tcGxldGVkIiwicmVzcG9uc2UiLCJpbml0U3VnZ2VzdGlvbldyYXBwZXJFbGVtZW50cyIsInRvcFJlc3VsdHNSZXF1ZXN0Q29tcGxldGVkIiwiZWwiLCJxdWVyeVNlbGVjdG9yIiwic2VsZWN0ZWQiLCJzdWdnZXN0aW9uTG9hZGluZ0NsYXNzTmFtZSIsIm1ha2VSZXF1ZXN0IiwidXJsIiwicXVlcnkiLCJyZXN0Q2xpZW50IiwicmVxdWVzdCIsImNvbXBsZXRlIiwiQVBJX1BBVEhTIiwic3VnZ2VzdGlvbiIsInByZXBhcmVSZXF1ZXN0IiwibGFzdFJlcXVlc3RlZFF1ZXJ5Iiwic2V0VGltZW91dCIsImNsZWFyQ3VycmVudFN1Z2dlc3Rpb24iLCJlbGVtZW50Iiwic3VnZ2VzdGlvblNlbGVjdGVkQ2xhc3NOYW1lIiwic2VsZWN0U3VnZ2VzdGlvbkl0ZW0iLCJhZGRDbGFzcyIsInRvcFJlc3VsdHMiLCJpbm5lclRleHQiLCJzZXRGb2N1c09uU2VhcmNoRmllbGQiLCJldmVudCIsImN1cnJlbnRUYXJnZXQiLCJkb21Db21wb25lbnRFbGVtZW50IiwibGFzdFR5cGVkUXVlcnkiLCJmb2N1cyIsIm9uVHlwZUFycm93c1VwQW5kRG93biIsInN1Z2dlc3Rpb25Ub1NlbGVjdCIsImtleUNvZGUiLCJrZXlDb2RlcyIsInVwIiwiZG93biIsInByZXZlbnREZWZhdWx0Iiwic2VhcmNoRmllbGRWYWx1ZVVwZGF0ZWQiLCJzZWFyY2hGaWVsZCIsIm9uVHlwZU9uU2VhcmNoRmllbGRIYW5kbGVyIiwiZXZlbnRUYXJnZXQiLCJlc2MiLCJ0YXJnZXQiLCJvbk1vdXNlTGVhdmVTdWdnZXN0aW9uIiwiYWRkRXZlbnRMaXN0ZW5lciIsImZvcm1TdWJtaXRIYW5kbGVyIiwibG9jYXRpb24iLCJwYXRobmFtZSIsImFzc2lnbiIsImRvbUZvcm1FbGVtZW50IiwicGFyZW50RWxlbWVudCIsIkVycm9yIiwiZGF0YVN1Z2dlc3Rpb24iLCJnZXRBdHRyaWJ1dGUiLCJzaG91bGRTdWdnZXN0Iiwic3ViIiwiY3JlYXRlU3VnZ2VzdGlvbiIsImNvbXBvbmVudHMiLCJkb2N1bWVudCJdLCJtYXBwaW5ncyI6IkFBQUEsY0FDQyxXQUdDLFFBQVNBLEdBQW1CQyxHQTRCMUIsUUFBU0MsR0FBVUMsRUFBTUMsR0FDdkIsR0FBSUMsR0FBUUYsQ0FJWixPQUhBRSxHQUFRQSxFQUFNQyxjQUNkRCxFQUFRQSxFQUFNRSxPQUVWSCxHQUNGQyxFQUFRQSxFQUFNRyxRQUFRLE9BQVEsS0FDdkJDLFVBQVVKLEtBSW5CSyxPQUFPQyxRQUFRQyxhQUFhVixVQUFVQyxHQUN0Q0UsRUFBUUEsRUFBTUcsUUFBUSxTQUFVLE1BS2xDLFFBQVNLLEtBQ1BILE9BQU9JLGFBQWFDLEVBQU1DLGlCQUcxQkQsRUFBTUMsZ0JBQWtCLElBRXhCLElBQUlDLEdBQWNDLEVBQThCQSxFQUE0QkMsaUJBQWlCLDhCQUM3RixJQUFJ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ZSI6Il9yZWZhY3RvcmluZy9fY29tcG9uZW50cy9zZWFyY2gtZmllbGQvYWxsL3NlYXJjaC1maWVsZC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG4oZnVuY3Rpb24oKSB7XG4gIHZhciBuc1B1YlN1YiA9IHdpbmRvdy5mcmVlZG9tLm5zUHViU3ViIHx8IHt9O1xuXG4gIGZ1bmN0aW9uIHNlYXJjaEZpZWxkRmFjdG9yeShjb21wb25lbnQpIHtcbiAgICB2YXIgZG9tU3VnZ2VzdGlvbkVsZW1lbnRXcmFwcGVyID0gY29tcG9uZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLXNlYXJjaC1zdWdnZXN0aW9uLXdyYXBwZXJdJyk7XG4gICAgdmFyIGRvbUNvbXBvbmVudEVsZW1lbnQgPSBjb21wb25lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtc2VhcmNoLWZpZWxkXScpO1xuICAgIHZhciBkb21Gb3JtRWxlbWVudCA9IGNvbXBvbmVudC5wYXJlbnRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLXNlYXJjaC1maWVsZC1mb3JtXScpO1xuXG4gICAgaWYgKCFkb21TdWdnZXN0aW9uRWxlbWVudFdyYXBwZXIgfHwgIWRvbUNvbXBvbmVudEVsZW1lbnQgfHwgIWRvbUZvcm1FbGVtZW50KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ01haW4gc3RydWN0dXJlIGlzIG1pc3NpbmcuIFZlcmlmeSBTZWFyY2hGaWVsZCBjb21wb25lbnQuJyk7XG4gICAgfVxuXG4gICAgdmFyIGNhY2hlID0ge1xuICAgICAgbGFzdFR5cGVkUXVlcnk6ICcnLFxuICAgICAgc2VhcmNoVGltZW91dElkOiBudWxsLFxuICAgICAgbGFzdFJlcXVlc3RlZFF1ZXJ5OiAnJyxcbiAgICAgIHNlbGVjdGVkU3VnZ2VzdGlvbkxhc3RQb3NpdGlvbjogLTFcbiAgICB9O1xuXG4gICAgdmFyIHN1Z2dlc3Rpb25TZWxlY3RlZENsYXNzTmFtZSA9ICdzZWxlY3RlZCc7XG4gICAgdmFyIHN1Z2dlc3Rpb25Mb2FkaW5nQ2xhc3NOYW1lID0gJ2xvYWRpbmcnO1xuICAgIHZhciBrZXlDb2RlcyA9IHtcbiAgICAgIHVwOiAzOCxcbiAgICAgIGRvd246IDQwLFxuICAgICAgZXNjOiAyN1xuICAgIH07XG4gICAgdmFyIEFQSV9QQVRIUyA9IHtcbiAgICAgIHN1Z2dlc3Rpb246ICcvcmVmYWN0b3Jpbmcvc3VnZ2VzdGlvbicsXG4gICAgICB0b3BSZXN1bHRzOiAnL3JlZmFjdG9yaW5nL3N1Z2dlc3Rpb24vdG9wLXJlc3VsdHMnXG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIG5vcm1hbGl6ZSh0ZXh0LCBpc0FqYXgpIHtcbiAgICAgIHZhciB2YWx1ZSA9IHRleHQ7XG4gICAgICB2YWx1ZSA9IHZhbHVlLnRvTG93ZXJDYXNlKCk7XG4gICAgICB2YWx1ZSA9IHZhbHVlLnRyaW0oKTtcblxuICAgICAgaWYgKGlzQWpheCkge1xuICAgICAgICB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UoL1xccysvZywgJysnKTtcbiAgICAgICAgcmV0dXJuIGVuY29kZVVSSSh2YWx1ZSk7XG4gICAgICB9XG5cbiAgICAgIC8vIGlzIGZvcm0gc3VibWl0XG4gICAgICB3aW5kb3cuZnJlZWRvbS5uc0RpYWNyaXRpY3Mubm9ybWFsaXplKHRleHQpO1xuICAgICAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKC9cXHNcXHMrL2csICcgJyk7XG5cbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjbGVhclN1Z2dlc3Rpb25XcmFwcGVyRWxlbWVudHMoKSB7XG4gICAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KGNhY2hlLnNlYXJjaFRpbWVvdXRJZCk7XG5cbiAgICAgIC8vIHVzZWZ1bCB0byBhdm9pZCBmb3JtZXIgY2FuY2VsbGVkIHJlcXVlc3RzIHRvIG92ZXJ3cml0ZSBjdXJyZW50IHN1Z2dlc3Rpb24gc3RhdGVcbiAgICAgIGNhY2hlLnNlYXJjaFRpbWVvdXRJZCA9IG51bGw7XG5cbiAgICAgIHZhciBzdWdnZXN0aW9ucyA9IGRvbVN1Z2dlc3Rpb25FbGVtZW50V3JhcHBlciA/IGRvbVN1Z2dlc3Rpb25FbGVtZW50V3JhcHBlci5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS1zdWdnZXN0aW9uLWxpc3RdIGEnKSA6IFtdO1xuICAgICAgaWYgKHN1Z2dlc3Rpb25zICYmIHN1Z2dlc3Rpb25zLmxlbmd0aCkge1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN1Z2dlc3Rpb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgc3VnZ2VzdGlvbnNbaV0ucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2VvdmVyJywgb25Nb3VzZU92ZXJTdWdnZXN0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBuc1B1YlN1Yi5wdWIoJ292ZXJsYXkuZGlzcGxheScsICdoaWRlJyk7XG4gICAgICB3aW5kb3cuZnJlZWRvbS5yZW1vdmVDbGFzcyhjb21wb25lbnQsICdzdWdnZXN0aW9uLWFjdGl2ZScpO1xuXG4gICAgICBkb21TdWdnZXN0aW9uRWxlbWVudFdyYXBwZXIuaW5uZXJIVE1MID0gJyc7XG4gICAgICBjYWNoZS5zZWxlY3RlZFN1Z2dlc3Rpb25MYXN0UG9zaXRpb24gPSAtMTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBzdWdnZXN0aW9uUmVxdWVzdENvbXBsZXRlZChyZXNwb25zZSkge1xuICAgICAgY2xlYXJTdWdnZXN0aW9uV3JhcHBlckVsZW1lbnRzKCk7XG5cbiAgICAgIGlmICh0eXBlb2YgcmVzcG9uc2UgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGRvbVN1Z2dlc3Rpb25FbGVtZW50V3JhcHBlci5pbm5lckhUTUwgPSByZXNwb25zZTtcbiAgICAgICAgaW5pdFN1Z2dlc3Rpb25XcmFwcGVyRWxlbWVudHMoKTtcbiAgICAgICAgd2luZG93LmZyZWVkb20ubnNQdWJTdWIucHViKCdTZWFyY2hmaWVsZC5zdWdnZXN0aW9uLmxvYWRlZCcpO1xuICAgICAgICB3aW5kb3cuZnJlZWRvbS5uc1B1YlN1Yi5wdWIoJ1NlYXJjaGZpZWxkLnN1Z2dlc3Rpb24ubG9hZGVkLmZsb2F0Lm1vYmlsZScpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHRvcFJlc3VsdHNSZXF1ZXN0Q29tcGxldGVkKHJlc3BvbnNlKSB7XG4gICAgICB2YXIgZWwgPSBkb21TdWdnZXN0aW9uRWxlbWVudFdyYXBwZXIucXVlcnlTZWxlY3RvcignW2RhdGEtc3VnZ2VzdGlvbi10b3AtcmVzdWx0cy13cmFwcGVyXScpO1xuICAgICAgaWYgKHR5cGVvZiByZXNwb25zZSA9PT0gJ3N0cmluZycgJiYgcmVzcG9uc2UgJiYgZWwpIHtcbiAgICAgICAgZWwuaW5uZXJIVE1MID0gcmVzcG9uc2U7XG4gICAgICAgIHdpbmRvdy5mcmVlZG9tLm5zUHViU3ViLnB1YignU2VhcmNoZmllbGQuc3VnZ2VzdGlvbi5sb2FkZWQnKTtcbiAgICAgIH1cbiAgICAgIHZhciBzZWxlY3RlZCA9IGRvbVN1Z2dlc3Rpb25FbGVtZW50V3JhcHBlci5xdWVyeVNlbGVjdG9yKCcuJyArIHN1Z2dlc3Rpb25Mb2FkaW5nQ2xhc3NOYW1lKTtcbiAgICAgIGlmIChzZWxlY3RlZCkge1xuICAgICAgICB3aW5kb3cuZnJlZWRvbS5yZW1vdmVDbGFzcyhzZWxlY3RlZCwgc3VnZ2VzdGlvbkxvYWRpbmdDbGFzc05hbWUpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIG1ha2VSZXF1ZXN0KHVybCwgcXVlcnkpIHtcbiAgICAgIGlmIChxdWVyeSAmJiBxdWVyeS5sZW5ndGggPiAyKSB7Ly8gb25seSAzIGNoYXJhY3RlcnMgb3IgbW9yZSFcbiAgICAgICAgd2luZG93LmZyZWVkb20ucmVzdENsaWVudC5yZXF1ZXN0KHVybCArICc/cT0nICsgcXVlcnksIHtcbiAgICAgICAgICBjb21wbGV0ZTogZnVuY3Rpb24ocmVzcG9uc2UpIHtcbiAgICAgICAgICAgIGlmIChjYWNoZS5zZWFyY2hUaW1lb3V0SWQpIHtcbiAgICAgICAgICAgICAgaWYgKHVybCA9PT0gQVBJX1BBVEhTLnN1Z2dlc3Rpb24pIHtcbiAgICAgICAgICAgICAgICBzdWdnZXN0aW9uUmVxdWVzdENvbXBsZXRlZChyZXNwb25zZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHRvcFJlc3VsdHNSZXF1ZXN0Q29tcGxldGVkKHJlc3BvbnNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdHJ1ZSBpZiByZXF1ZXN0IGlzIGJlaW5nIHBlcmZvcm1lZC5cbiAgICAgKiBJZiBpdCBpcyB0aGUgc2FtZSBvZiB0aGUgbGFzdCBxdWVyeSByZXF1ZXN0ZWQsIHdpbGwgcmV0dXJuIGZhbHNlXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBwcmVwYXJlUmVxdWVzdCh1cmwsIHF1ZXJ5KSB7XG4gICAgICBxdWVyeSA9IG5vcm1hbGl6ZShxdWVyeSwgdHJ1ZSk7XG4gICAgICBpZiAocXVlcnkudG9Mb3dlckNhc2UoKSA9PT0gY2FjaGUubGFzdFJlcXVlc3RlZFF1ZXJ5LnRvTG93ZXJDYXNlKCkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICBjYWNoZS5sYXN0UmVxdWVzdGVkUXVlcnkgPSBxdWVyeTtcblxuICAgICAgd2luZG93LmNsZWFyVGltZW91dChjYWNoZS5zZWFyY2hUaW1lb3V0SWQpO1xuXG4gICAgICBjYWNoZS5zZWFyY2hUaW1lb3V0SWQgPSB3aW5kb3cuc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgbWFrZVJlcXVlc3QodXJsLCBxdWVyeSk7XG4gICAgICB9LCA0MDApO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY2xlYXJDdXJyZW50U3VnZ2VzdGlvbigpIHtcbiAgICAgIHZhciBlbGVtZW50ID0gZG9tU3VnZ2VzdGlvbkVsZW1lbnRXcmFwcGVyLnF1ZXJ5U2VsZWN0b3IoJy4nICsgc3VnZ2VzdGlvblNlbGVjdGVkQ2xhc3NOYW1lKTtcbiAgICAgIGlmIChlbGVtZW50KSB7XG4gICAgICAgIHdpbmRvdy5mcmVlZG9tLnJlbW92ZUNsYXNzKGVsZW1lbnQsIHN1Z2dlc3Rpb25TZWxlY3RlZENsYXNzTmFtZSk7XG4gICAgICAgIHdpbmRvdy5mcmVlZG9tLnJlbW92ZUNsYXNzKGVsZW1lbnQsIHN1Z2dlc3Rpb25Mb2FkaW5nQ2xhc3NOYW1lKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBzZWxlY3RTdWdnZXN0aW9uSXRlbShlbGVtZW50KSB7XG4gICAgICB3aW5kb3cuZnJlZWRvbS5hZGRDbGFzcyhlbGVtZW50LCBzdWdnZXN0aW9uU2VsZWN0ZWRDbGFzc05hbWUpO1xuICAgICAgaWYgKGVsZW1lbnQgJiYgcHJlcGFyZVJlcXVlc3QoQVBJX1BBVEhTLnRvcFJlc3VsdHMsIGVsZW1lbnQuaW5uZXJUZXh0KSkge1xuICAgICAgICB3aW5kb3cuZnJlZWRvbS5hZGRDbGFzcyhlbGVtZW50LCBzdWdnZXN0aW9uTG9hZGluZ0NsYXNzTmFtZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc2V0Rm9jdXNPblNlYXJjaEZpZWxkKGV2ZW50KSB7XG4gICAgICB3aW5kb3cuZnJlZWRvbS5yZW1vdmVDbGFzcyhldmVudC5jdXJyZW50VGFyZ2V0LCBzdWdnZXN0aW9uU2VsZWN0ZWRDbGFzc05hbWUpO1xuICAgICAgZG9tQ29tcG9uZW50RWxlbWVudC52YWx1ZSA9IGNhY2hlLmxhc3RUeXBlZFF1ZXJ5O1xuICAgICAgZG9tQ29tcG9uZW50RWxlbWVudC5mb2N1cygpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIG9uVHlwZUFycm93c1VwQW5kRG93bihldmVudCkge1xuICAgICAgdmFyIHN1Z2dlc3Rpb25zID0gZG9tU3VnZ2VzdGlvbkVsZW1lbnRXcmFwcGVyID8gZG9tU3VnZ2VzdGlvbkVsZW1lbnRXcmFwcGVyLnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLXN1Z2dlc3Rpb24tbGlzdF0gYScpIDogW107XG4gICAgICB2YXIgc3VnZ2VzdGlvblRvU2VsZWN0O1xuXG4gICAgICBpZiAoIXN1Z2dlc3Rpb25zLmxlbmd0aCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChjYWNoZS5zZWxlY3RlZFN1Z2dlc3Rpb25MYXN0UG9zaXRpb24gPT09IC0xKSB7XG4gICAgICAgIGNhY2hlLmxhc3RUeXBlZFF1ZXJ5ID0gZG9tQ29tcG9uZW50RWxlbWVudC52YWx1ZTtcbiAgICAgIH1cblxuICAgICAgc3dpdGNoIChldmVudC5rZXlDb2RlKSB7XG4gICAgICAgIGNhc2Uga2V5Q29kZXMudXA6XG5cbiAgICAgICAgICBpZiAoY2FjaGUuc2VsZWN0ZWRTdWdnZXN0aW9uTGFzdFBvc2l0aW9uID49IDApIHtcbiAgICAgICAgICAgIGNhY2hlLnNlbGVjdGVkU3VnZ2VzdGlvbkxhc3RQb3NpdGlvbi0tO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWNoZS5zZWxlY3RlZFN1Z2dlc3Rpb25MYXN0UG9zaXRpb24gPSBzdWdnZXN0aW9ucy5sZW5ndGggLSAxO1xuICAgICAgICAgIH1cbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBrZXlDb2Rlcy5kb3duOlxuICAgICAgICAgIGlmIChjYWNoZS5zZWxlY3RlZFN1Z2dlc3Rpb25MYXN0UG9zaXRpb24gPT09IHN1Z2dlc3Rpb25zLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgICAgIGNhY2hlLnNlbGVjdGVkU3VnZ2VzdGlvbkxhc3RQb3NpdGlvbiA9IC0xO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWNoZS5zZWxlY3RlZFN1Z2dlc3Rpb25MYXN0UG9zaXRpb24rKztcbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICBpZiAoY2FjaGUuc2VsZWN0ZWRTdWdnZXN0aW9uTGFzdFBvc2l0aW9uID09PSAtMSkge1xuICAgICAgICBkb21Db21wb25lbnRFbGVtZW50LnZhbHVlID0gY2FjaGUubGFzdFR5cGVkUXVlcnk7XG4gICAgICAgIHNldEZvY3VzT25TZWFyY2hGaWVsZChldmVudCk7XG4gICAgICAgIGNsZWFyQ3VycmVudFN1Z2dlc3Rpb24oKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBzdWdnZXN0aW9uVG9TZWxlY3QgPSBzdWdnZXN0aW9uc1tjYWNoZS5zZWxlY3RlZFN1Z2dlc3Rpb25MYXN0UG9zaXRpb25dO1xuXG4gICAgICBpZiAoZG9tQ29tcG9uZW50RWxlbWVudCAmJiBzdWdnZXN0aW9uVG9TZWxlY3QpIHtcbiAgICAgICAgZG9tQ29tcG9uZW50RWxlbWVudC52YWx1ZSA9IHN1Z2dlc3Rpb25Ub1NlbGVjdC5pbm5lclRleHQ7XG4gICAgICB9XG5cbiAgICAgIGNsZWFyQ3VycmVudFN1Z2dlc3Rpb24oKTtcblxuICAgICAgaWYgKHN1Z2dlc3Rpb25Ub1NlbGVjdCkge1xuICAgICAgICBzZWxlY3RTdWdnZXN0aW9uSXRlbShzdWdnZXN0aW9uVG9TZWxlY3QpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHNlYXJjaEZpZWxkVmFsdWVVcGRhdGVkKHNlYXJjaEZpZWxkKSB7XG4gICAgICBpZiAoc2VhcmNoRmllbGQudmFsdWUpIHtcbiAgICAgICAgd2luZG93LmZyZWVkb20uYWRkQ2xhc3MoY29tcG9uZW50LCAnY2xlYXItYWN0aXZlJyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB3aW5kb3cuZnJlZWRvbS5yZW1vdmVDbGFzcyhjb21wb25lbnQsICdjbGVhci1hY3RpdmUnKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHNlYXJjaEZpZWxkLnZhbHVlLmxlbmd0aCA8IDMpIHtcbiAgICAgICAgY2xlYXJTdWdnZXN0aW9uV3JhcHBlckVsZW1lbnRzKCk7XG4gICAgICAgIHdpbmRvdy5mcmVlZG9tLm5zUHViU3ViLnB1YignU2VhcmNoU3VnZ2VzdGlvbi5tb2JpbGUuZGlzYWJsZS5GaXhlZCcpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHByZXBhcmVSZXF1ZXN0KEFQSV9QQVRIUy5zdWdnZXN0aW9uLCBzZWFyY2hGaWVsZC52YWx1ZSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gb25UeXBlT25TZWFyY2hGaWVsZEhhbmRsZXIoZXZlbnQpIHtcbiAgICAgIHZhciBldmVudFRhcmdldCA9IGV2ZW50LmN1cnJlbnRUYXJnZXQ7XG5cbiAgICAgIGlmIChldmVudC5rZXlDb2RlID09PSBrZXlDb2Rlcy5lc2MpIHtcbiAgICAgICAgd2luZG93LmZyZWVkb20ubnNQdWJTdWIucHViKCdTZWFyY2hmaWVsZC5lc2MucHJlc3NlZCcpO1xuICAgICAgICBjbGVhclN1Z2dlc3Rpb25XcmFwcGVyRWxlbWVudHMoKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAoZXZlbnQua2V5Q29kZSA9PT0ga2V5Q29kZXMudXAgfHwgZXZlbnQua2V5Q29kZSA9PT0ga2V5Q29kZXMuZG93bikge1xuICAgICAgICBvblR5cGVBcnJvd3NVcEFuZERvd24oZXZlbnQpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHNlYXJjaEZpZWxkVmFsdWVVcGRhdGVkKGV2ZW50VGFyZ2V0KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBvbk1vdXNlT3ZlclN1Z2dlc3Rpb24oZXZlbnQpIHtcbiAgICAgIGNsZWFyQ3VycmVudFN1Z2dlc3Rpb24oKTtcbiAgICAgIGlmIChldmVudCAmJiBldmVudC5jdXJyZW50VGFyZ2V0ICYmIHByZXBhcmVSZXF1ZXN0KEFQSV9QQVRIUy50b3BSZXN1bHRzLCBldmVudC5jdXJyZW50VGFyZ2V0LmlubmVyVGV4dCkpIHtcbiAgICAgICAgd2luZG93LmZyZWVkb20uYWRkQ2xhc3MoZXZlbnQudGFyZ2V0LCBzdWdnZXN0aW9uTG9hZGluZ0NsYXNzTmFtZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gb25Nb3VzZUxlYXZlU3VnZ2VzdGlvbihldmVudCkge1xuICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgd2luZG93LmZyZWVkb20ucmVtb3ZlQ2xhc3MoZXZlbnQudGFyZ2V0LCBzdWdnZXN0aW9uTG9hZGluZ0NsYXNzTmFtZSk7XG4gICAgICB9LCAyMCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaW5pdFN1Z2dlc3Rpb25XcmFwcGVyRWxlbWVudHMoKSB7XG4gICAgICB2YXIgc3VnZ2VzdGlvbnMgPSBkb21TdWdnZXN0aW9uRWxlbWVudFdyYXBwZXIgPyBkb21TdWdnZXN0aW9uRWxlbWVudFdyYXBwZXIucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtc3VnZ2VzdGlvbi1saXN0XSBhJykgOiBbXTtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdWdnZXN0aW9ucy5sZW5ndGg7IGkrKykge1xuICAgICAgICBzdWdnZXN0aW9uc1tpXS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW92ZXInLCBvbk1vdXNlT3ZlclN1Z2dlc3Rpb24pO1xuICAgICAgICBzdWdnZXN0aW9uc1tpXS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWxlYXZlJywgb25Nb3VzZUxlYXZlU3VnZ2VzdGlvbik7XG4gICAgICB9XG5cbiAgICAgIG5zUHViU3ViLnB1Yignb3ZlcmxheS5kaXNwbGF5JywgJ3Nob3cnKTtcbiAgICAgIHdpbmRvdy5mcmVlZG9tLmFkZENsYXNzKGNvbXBvbmVudCwgJ3N1Z2dlc3Rpb24tYWN0aXZlJyk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZm9ybVN1Ym1pdEhhbmRsZXIoZXZlbnQpIHtcblxuICAgICAgaWYgKGRvbUNvbXBvbmVudEVsZW1lbnQudmFsdWUpIHtcbiAgICAgICAgZG9tQ29tcG9uZW50RWxlbWVudC52YWx1ZS5yZXBsYWNlKC88W2EtekEtWlxcL11bXj5dKj58XCI+fDxcIi9nLCAnJyk7XG4gICAgICAgIGRvbUNvbXBvbmVudEVsZW1lbnQudmFsdWUgPSBub3JtYWxpemUoZG9tQ29tcG9uZW50RWxlbWVudC52YWx1ZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB3aW5kb3cuZnJlZWRvbS5wcmV2ZW50RGVmYXVsdChldmVudCk7XG4gICAgICAgIGlmICh3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUgJiYgd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lICE9PSAnLycpIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24uYXNzaWduKCcvJyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAoZnVuY3Rpb24gaW5pdCgpIHtcbiAgICAgIHZhciBkYXRhU3VnZ2VzdGlvbiA9IGNvbXBvbmVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtc3VnZ2VzdGlvbicpO1xuICAgICAgdmFyIHNob3VsZFN1Z2dlc3QgPSAhKGRhdGFTdWdnZXN0aW9uICYmIGRhdGFTdWdnZXN0aW9uICE9PSAnRU5BQkxFRCcpO1xuXG4gICAgICBkb21Gb3JtRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCBmb3JtU3VibWl0SGFuZGxlcik7XG5cbiAgICAgIGlmIChzaG91bGRTdWdnZXN0KSB7XG4gICAgICAgIGNsZWFyU3VnZ2VzdGlvbldyYXBwZXJFbGVtZW50cygpO1xuICAgICAgICB3aW5kb3cuZnJlZWRvbS5uc1B1YlN1Yi5zdWIoJ292ZXJsYXkuY2xpY2tlZCcsIGNsZWFyU3VnZ2VzdGlvbldyYXBwZXJFbGVtZW50cyk7XG4gICAgICAgIHdpbmRvdy5mcmVlZG9tLm5zUHViU3ViLnN1Yignc2VhcmNoRmllbGQuY2xlYXJTdWdnZXN0aW9uJywgY2xlYXJTdWdnZXN0aW9uV3JhcHBlckVsZW1lbnRzKTtcbiAgICAgICAgd2luZG93LmZyZWVkb20ubnNQdWJTdWIuc3ViKCdmbG9hdC5zZWFyY2hGaWVsZC5jbGVhclN1Z2dlc3Rpb24nLCBjbGVhclN1Z2dlc3Rpb25XcmFwcGVyRWxlbWVudHMpO1xuICAgICAgICB3aW5kb3cuZnJlZWRvbS5uc1B1YlN1Yi5zdWIoJ3NlYXJjaEZpZWxkLnZhbHVlVXBkYXRlZCcsIHNlYXJjaEZpZWxkVmFsdWVVcGRhdGVkKTtcbiAgICAgICAgZG9tQ29tcG9uZW50RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsIG9uVHlwZU9uU2VhcmNoRmllbGRIYW5kbGVyKTtcbiAgICAgIH1cblxuICAgIH0oKSk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVTdWdnZXN0aW9uKCkge1xuICAgIHZhciBjb21wb25lbnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtc2VhcmNoLWZpZWxkLXdyYXBwZXJdJyk7XG5cbiAgICBpZiAoIWNvbXBvbmVudHMubGVuZ3RoKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjb21wb25lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBzZWFyY2hGaWVsZEZhY3RvcnkoY29tcG9uZW50c1tpXSk7XG4gICAgfVxuICB9XG5cbiAgKGZ1bmN0aW9uKCkge1xuICAgIG5zUHViU3ViLnN1YignbnNEaWFjcml0aWNzLmxvYWRlZCcsIGNyZWF0ZVN1Z2dlc3Rpb24pO1xuICB9KCkpO1xuXG59KCkpO1xuIl19
